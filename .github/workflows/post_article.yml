# GitHub Actions workflow: Post Article to My daily companion
#
# ‚ñ∏ Usage 1: "Run workflow" (Actions ‚ñ∏ Post Article ‚ñ∏ Run) and
#            fill in title + body HTML directly in the popup.
# ‚ñ∏ Usage 2: Call via API:
#            curl -X POST \
#              -H "Authorization: Bearer <PAT>" \
#              -H "Accept: application/vnd.github+json" \
#              -d '{"ref":"main","inputs":{"title":"My Title","body":"<p>content</p>"}}' \
#              https://api.github.com/repos/k-hicham/k-hicham.github.io/actions/workflows/post_article.yml/dispatches
#
# Prerequisite: In repo Settings ‚ñ∏ Secrets ‚ñ∏ New repository secret
#               Name: GH_TOKEN  (Scopes: repo)
#               Value: <your Personal Access Token>

name: "Post Article"

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Article title (e.g. Who am I)"
        required: true
        type: string
      body:
        description: "HTML body ‚Äì you can paste <p>...</p> or an entire HTML snippet. Use \n for new lines."
        required: true
        type: string
      date:
        description: "Display date (optional, default = today, e.g. 24 July 2025)"
        required: false
        type: string
      readtime:
        description: "Estimated reading time in minutes (optional, default = 2)"
        required: false
        type: string

permissions:
  contents: write  # allow git push

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è  Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: üõ†Ô∏è  Insert article into index.html
        env:
          TITLE: ${{ inputs.title }}
          BODY: ${{ inputs.body }}
          DATE_IN: ${{ inputs.date }}
          READ: ${{ inputs.readtime }}
        run: |
          python - <<'PY'
          import os, datetime, pathlib, sys, re, html as html_mod

          title = os.environ['TITLE']
          body_raw = os.environ['BODY']
          date_display = os.environ.get('DATE_IN') or datetime.date.today().strftime('%d %B %Y')
          read_min = os.environ.get('READ') or '2'

          # Ensure basic HTML escaping except for tags
          body = body_raw

          new_block = f"""            <article>
                <h2>{title}</h2>
                <p class=\"meta\">{date_display} ¬∑ {read_min} min read</p>
{body}\n            </article>\n"""

          idx = pathlib.Path('index.html')
          html = idx.read_text(encoding='utf-8')

          # Try to insert just before closing tag of posts section
          match = re.search(r'(</section>\s*)(<!--\s*posts end\s*-->)?', html, re.IGNORECASE)
          if match:
              insert_pos = match.start()
              html = html[:insert_pos] + new_block + html[insert_pos:]
          else:
              print('‚ùå Could not find </section> to inject article', file=sys.stderr)
              sys.exit(1)

          idx.write_text(html, encoding='utf-8')
          print('‚úÖ Article block injected')
          PY

      - name: üîê Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: üöÄ Commit and push changes
        run: |
          if git diff --quiet; then
            echo "No changes ‚Äì skipping commit"
            exit 0
          fi
          git add index.html
          git commit -m "chore: add article '${{ inputs.title }}' via workflow"
          git push
        env:
          GIT_ASKPASS: echo
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
